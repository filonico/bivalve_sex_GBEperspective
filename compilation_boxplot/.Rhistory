# import and format data
compilation.raw <- read.table("dmrt.compilation.tsv", header = TRUE, check.names = FALSE)
colnames(compilation.raw)[5] <- "Dmrt4/5"
compilation.tibble <- dplyr::as_tibble(compilation.raw) %>%
tidyr::pivot_longer(!Species, names_to = "Gene", values_to = "Count")
library(dplyr)
compilation.tibble <- dplyr::as_tibble(compilation.raw) %>%
tidyr::pivot_longer(!Species, names_to = "Gene", values_to = "Count")
compilation.tibble$Gene["Dmrt45"]
compilation.tibble
# define the species and gene order that should be displayed in the plot
species_order <- factor(compilation.tibble$Species, levels = c("Mmar","Pstr","Scon","Dros","Dpol","Amar","Csin","Rphi","Mmer","Sbro","Pyes","Pmax","Apur","Airi","Airc","Pmar","Sglo","Cvir","Cari","Cgig","Pvir","Mcor","Mgal","Medu"))
gene_order <- factor(compilation.tibble$Gene, levels = c("Dmrt2","Dmrt3","Dmrt4/5","Dmrt1L"))
plot.compilation <- dplyr::ggplot(compilation.tibble, aes(x = species_order,
y = fct_rev(gene_order),
fill = factor(Count))) +
geom_tile(color = "grey20", size = 0.4) +
geom_text(aes(label = Count), size = 2) +
scale_fill_manual(values = c("white", "#D6DBE2", "#9CA8BA", "#58677E")) +
scale_x_discrete(position = "top") +
theme_bw() +
labs(fill = "Count") +
theme(panel.grid = element_blank(),
axis.text.x = element_text(size = 6, angle = 90, hjust = 0),
axis.text.y = element_text(face = 'bold.italic',
colour = c("#0092ff", "#bbc5d0","#bbc5d0","#bbc5d0")),
panel.border = element_rect(size = 1),
# axis.text.y = element_text(size = 5),
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.position = "none") +
coord_equal(expand = 0)
plot.compilation <- ggplot2::ggplot(compilation.tibble, aes(x = species_order,
y = fct_rev(gene_order),
fill = factor(Count))) +
geom_tile(color = "grey20", size = 0.4) +
geom_text(aes(label = Count), size = 2) +
scale_fill_manual(values = c("white", "#D6DBE2", "#9CA8BA", "#58677E")) +
scale_x_discrete(position = "top") +
theme_bw() +
labs(fill = "Count") +
theme(panel.grid = element_blank(),
axis.text.x = element_text(size = 6, angle = 90, hjust = 0),
axis.text.y = element_text(face = 'bold.italic',
colour = c("#0092ff", "#bbc5d0","#bbc5d0","#bbc5d0")),
panel.border = element_rect(size = 1),
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.position = "none") +
coord_equal(expand = 0)
plot.compilation <- ggplot(compilation.tibble, aes(x = species_order,
y = fct_rev(gene_order),
fill = factor(Count))) +
geom_tile(color = "grey20", size = 0.4) +
geom_text(aes(label = Count), size = 2) +
scale_fill_manual(values = c("white", "#D6DBE2", "#9CA8BA", "#58677E")) +
scale_x_discrete(position = "top") +
theme_bw() +
labs(fill = "Count") +
theme(panel.grid = element_blank(),
axis.text.x = element_text(size = 6, angle = 90, hjust = 0),
axis.text.y = element_text(face = 'bold.italic',
colour = c("#0092ff", "#bbc5d0","#bbc5d0","#bbc5d0")),
panel.border = element_rect(size = 1),
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.position = "none") +
coord_equal(expand = 0)
library(ggplot2)
plot.compilation <- ggplot(compilation.tibble, aes(x = species_order,
y = fct_rev(gene_order),
fill = factor(Count))) +
geom_tile(color = "grey20", size = 0.4) +
geom_text(aes(label = Count), size = 2) +
scale_fill_manual(values = c("white", "#D6DBE2", "#9CA8BA", "#58677E")) +
scale_x_discrete(position = "top") +
theme_bw() +
labs(fill = "Count") +
theme(panel.grid = element_blank(),
axis.text.x = element_text(size = 6, angle = 90, hjust = 0),
axis.text.y = element_text(face = 'bold.italic',
colour = c("#0092ff", "#bbc5d0","#bbc5d0","#bbc5d0")),
panel.border = element_rect(size = 1),
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.position = "none") +
coord_equal(expand = 0)
plot.compilation <- ggplot(compilation.tibble, aes(x = species_order,
y = fct_rev(gene_order),
fill = factor(Count))) +
geom_tile(color = "grey20", size = 0.4) +
geom_text(aes(label = Count), size = 2) +
scale_fill_manual(values = c("white", "#D6DBE2", "#9CA8BA", "#58677E")) +
scale_x_discrete(position = "top") +
theme_bw() +
labs(fill = "Count") +
theme(panel.grid = element_blank(),
axis.text.x = element_text(size = 6, angle = 90, hjust = 0),
axis.text.y = element_text(face = 'bold.italic',
colour = c("#0092ff", "#bbc5d0","#bbc5d0","#bbc5d0")),
panel.border = element_rect(linewidth = 1),
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.position = "none") +
coord_equal(expand = 0)
plot.compilation
plot.compilation <- ggplot(compilation.tibble, aes(x = species_order,
y = fct_rev(gene_order),
fill = factor(Count))) +
geom_tile(color = "grey20", size = 0.4) +
geom_text(aes(label = Count), size = 2) +
scale_fill_manual(values = c("white", "#D6DBE2", "#9CA8BA", "#58677E")) +
scale_x_discrete(position = "top") +
theme_bw() +
labs(fill = "Count") +
theme(panel.grid = element_blank(),
axis.text.x = element_text(size = 6, angle = 90, hjust = 0),
axis.text.y = element_text(face = 'bold.italic',
colour = c("#0092ff", "#bbc5d0","#bbc5d0","#bbc5d0")),
panel.border = element_rect(linewidth = 1),
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.position = "none") +
coord_equal(expand = 0)
plot.compilation
plot.compilation <- ggplot(compilation.tibble, aes(x = species_order,
y = gene_order,
fill = factor(Count))) +
geom_tile(color = "grey20", size = 0.4) +
geom_text(aes(label = Count), size = 2) +
scale_fill_manual(values = c("white", "#D6DBE2", "#9CA8BA", "#58677E")) +
scale_x_discrete(position = "top") +
theme_bw() +
labs(fill = "Count") +
theme(panel.grid = element_blank(),
axis.text.x = element_text(size = 6, angle = 90, hjust = 0),
axis.text.y = element_text(face = 'bold.italic',
colour = c("#0092ff", "#bbc5d0","#bbc5d0","#bbc5d0")),
panel.border = element_rect(linewidth = 1),
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.position = "none") +
coord_equal(expand = 0)
plot.compilation
gene_order <- factor(compilation.tibble$Gene, levels = c("Dmrt1L","Dmrt2","Dmrt3","Dmrt4/5"))
plot.compilation <- ggplot(compilation.tibble, aes(x = species_order,
y = gene_order,
fill = factor(Count))) +
geom_tile(color = "grey20", size = 0.4) +
geom_text(aes(label = Count), size = 2) +
scale_fill_manual(values = c("white", "#D6DBE2", "#9CA8BA", "#58677E")) +
scale_x_discrete(position = "top") +
theme_bw() +
labs(fill = "Count") +
theme(panel.grid = element_blank(),
axis.text.x = element_text(size = 6, angle = 90, hjust = 0),
axis.text.y = element_text(face = 'bold.italic',
colour = c("#0092ff", "#bbc5d0","#bbc5d0","#bbc5d0")),
panel.border = element_rect(linewidth = 1),
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.position = "none") +
coord_equal(expand = 0)
plot.compilation
gene_order <- factor(compilation.tibble$Gene, levels = c("Dmrt1L","Dmrt4/5","Dmrt2","Dmrt3"))
plot.compilation <- ggplot(compilation.tibble, aes(x = species_order,
y = gene_order,
fill = factor(Count))) +
geom_tile(color = "grey20", size = 0.4) +
geom_text(aes(label = Count), size = 2) +
scale_fill_manual(values = c("white", "#D6DBE2", "#9CA8BA", "#58677E")) +
scale_x_discrete(position = "top") +
theme_bw() +
labs(fill = "Count") +
theme(panel.grid = element_blank(),
axis.text.x = element_text(size = 6, angle = 90, hjust = 0),
axis.text.y = element_text(face = 'bold.italic',
colour = c("#0092ff", "#bbc5d0","#bbc5d0","#bbc5d0")),
panel.border = element_rect(linewidth = 1),
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.position = "none") +
coord_equal(expand = 0)
plot.compilation
gene_order <- factor(compilation.tibble$Gene, levels = c("Dmrt1L","Dmrt4/5","Dmrt3","Dmrt2"))
plot.compilation <- ggplot(compilation.tibble, aes(x = species_order,
y = gene_order,
fill = factor(Count))) +
geom_tile(color = "grey20", size = 0.4) +
geom_text(aes(label = Count), size = 2) +
scale_fill_manual(values = c("white", "#D6DBE2", "#9CA8BA", "#58677E")) +
scale_x_discrete(position = "top") +
theme_bw() +
labs(fill = "Count") +
theme(panel.grid = element_blank(),
axis.text.x = element_text(size = 6, angle = 90, hjust = 0),
axis.text.y = element_text(face = 'bold.italic',
colour = c("#0092ff", "#bbc5d0","#bbc5d0","#bbc5d0")),
panel.border = element_rect(linewidth = 1),
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.position = "none") +
coord_equal(expand = 0)
plot.compilation
plot.compilation <- ggplot(compilation.tibble, aes(x = species_order,
y = gene_order,
fill = factor(Count))) +
geom_tile(color = "grey20", size = 0.4) +
geom_text(aes(label = Count), size = 2) +
scale_x_discrete(position = "top") +
theme_bw() +
labs(fill = "Count") +
theme(panel.grid = element_blank(),
axis.text.x = element_text(size = 6, angle = 90, hjust = 0),
axis.text.y = element_text(face = 'bold.italic',
colour = c("#0092ff", "#bbc5d0","#bbc5d0","#bbc5d0")),
panel.border = element_rect(linewidth = 1),
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.position = "none") +
coord_equal(expand = 0)
plot.compilation
plot.compilation <- ggplot(compilation.tibble, aes(x = species_order,
y = gene_order,
fill = factor(Count))) +
geom_tile(color = "grey20", size = 0.4) +
geom_text(aes(label = Count), size = 2) +
scale_fill_manual(values = c("white", "#D6DBE2")) +
scale_x_discrete(position = "top") +
theme_bw() +
labs(fill = "Count") +
theme(panel.grid = element_blank(),
axis.text.x = element_text(size = 6, angle = 90, hjust = 0),
axis.text.y = element_text(face = 'bold.italic',
colour = c("#0092ff", "#bbc5d0","#bbc5d0","#bbc5d0")),
panel.border = element_rect(linewidth = 1),
axis.ticks = element_blank(),
axis.title = element_blank(),
legend.position = "none") +
coord_equal(expand = 0)
plot.compilation
?read.phyDat
??read.phyDat
??dist.ml
# define a function to calculate pairwise amino acid distances of each Dmrt gene
calculate_distance <- function(gene_name) {
file_name <- paste(gene_name, ".aligned.trim06.faa", sep = "")
alignment <- phangorn::read.phyDat(file_name, format = "fasta", type = "AA")
dist <- phangorn::dist.ml(alignment, model = "JTT")
dist_list <- dist[1:length(dist)]
data.frame(Gene = rep(gene_name, length(dist_list)), Dist = dist_list)
}
# define the dataframe that will be used as input to ggplot
dist.all.distr <- data.frame()
for (gene in gene_order) {
dist_data <- calculate_distance(gene)
dist.al.distr <- rbind(dist.al.distr, dist_data)
}
dist.all.distr <- rbind(dist.al.distr, dist_data)
dist.all.distr <- rbind(dist.all.distr, dist_data)
dist.all.distr
gene_order
dist_data
# define the dataframe that will be used as input to ggplot
dist.all.distr <- data.frame()
dist.all.distr
for (gene in gene_order) {
dist_data <- calculate_distance(gene)
dist.all.distr <- rbind(dist.all.distr, dist_data)
}
# define the dataframe that will be used as input to ggplot
dist.all.distr <- data.frame()
genes <- c("Dmrt2", "Dmrt3", "Dmrt45", "Dmrt1L")
genes
for (gene in genes) {
dist_data <- calculate_distance(genes)
dist.all.distr <- rbind(dist.all.distr, dist_data)
}
dist_data <- calculate_distance(gene)
# define the dataframe that will be used as input to ggplot
dist.all.distr <- data.frame()
genes <- c("Dmrt2", "Dmrt3", "Dmrt45", "Dmrt1L")
for (gene in genes) {
dist_data <- calculate_distance(gene)
dist.all.distr <- rbind(dist.all.distr, dist_data)
}
dist.all.distr
dist.al.distr$Gene <- factor(dist.al.distr$Gene, levels = genes)
dist.all.distr$Gene <- factor(dist.all.distr$Gene, levels = genes)
dist.all.distr
boxplot <- ggplot(dist.all.distr, aes(Gene, Dist,
fill = as.factor(Gene), color = as.factor(Gene))) +
geom_boxplot(lwd = 1) +
# ylim(0, 3.5) +
# geom_segment(aes(x = "Dmrt1L", xend = "Dmrt2", y = 2.8, yend = 2.8), lwd = 0.7, col = "#7f878f") +
# geom_segment(aes(x = "Dmrt1L", xend = "Dmrt3", y = 3, yend = 3), lwd = 0.7, col = "#7f878f") +
# geom_segment(aes(x = "Dmrt1L", xend = "Dmrt4/5", y = 3.2, yend = 3.2), lwd = 0.7, col = "#7f878f") +
# geom_segment(aes(x = "Dmrt3", xend = "Dmrt4/5", y = 2.6, yend = 2.6), lwd = 0.7, col = "#7f878f") +
# geom_segment(aes(x = "Dmrt2", xend = "Dmrt4/5", y = 2.4, yend = 2.4), lwd = 0.7, col = "#7f878f") +
# annotate("text", label = "****", x = 2.5, y = 2.85, col = "#7f878f", size = 4) +
# annotate("text", label = "****", x = 3, y = 3.05, col = "#7f878f", size = 4) +
# annotate("text", label = "****", x = 3.5, y = 3.25, col = "#7f878f", size = 4) +
# annotate("text", label = "****", x = 2.5, y = 2.65, col = "#7f878f", size = 4) +
# annotate("text", label = "***", x = 2, y = 2.45, col = "#7f878f", size = 4) +
scale_fill_manual(values = alpha(c("#bbc5d0","#bbc5d0","#bbc5d0","#0092ff"), 0.5)) +
scale_color_manual(values = c("#bbc5d0","#bbc5d0","#bbc5d0","#0092ff")) +
ylab("Amino acid distance") +
xlab("") +
theme_light() +
theme(axis.title.y = element_text(size = 13, vjust = 2.5, color = "#4d4d4d"),
axis.text.x = element_text(size = 13, vjust = -0.5, face = 'bold.italic',
colour = c("#bbc5d0","#bbc5d0","#bbc5d0","#0092ff")),
legend.position = "none")
boxplot
shapiro.test(resid(dist.all.distr.lm)) #not normally-distributed
# statistics related to boxplots
dist.all.distr.lm <- lm(Dist ~ Gene, data = dist.all.distr)
qqnorm(resid(dist.all.distr.lm))
shapiro.test(resid(dist.all.distr.lm)) #not normally-distributed
kruskal.test(dist.all.distr$Dist, dist.all.distr$Gene) #there are significant differences
pairwise.wilcox.test(dist.all.distr$Dist, dist.all.distr$Gene, p.adjust.method = "bonferroni")
boxplot <- ggplot(dist.all.distr, aes(Gene, Dist,
fill = as.factor(Gene), color = as.factor(Gene))) +
geom_boxplot(lwd = 1) +
# ylim(0, 3.5) +
# geom_segment(aes(x = "Dmrt1L", xend = "Dmrt2", y = 2.8, yend = 2.8), lwd = 0.7, col = "#7f878f") +
# geom_segment(aes(x = "Dmrt1L", xend = "Dmrt3", y = 3, yend = 3), lwd = 0.7, col = "#7f878f") +
# geom_segment(aes(x = "Dmrt1L", xend = "Dmrt4/5", y = 3.2, yend = 3.2), lwd = 0.7, col = "#7f878f") +
# geom_segment(aes(x = "Dmrt3", xend = "Dmrt4/5", y = 2.6, yend = 2.6), lwd = 0.7, col = "#7f878f") +
# geom_segment(aes(x = "Dmrt2", xend = "Dmrt4/5", y = 2.4, yend = 2.4), lwd = 0.7, col = "#7f878f") +
# annotate("text", label = "****", x = 2.5, y = 2.85, col = "#7f878f", size = 4) +
# annotate("text", label = "****", x = 3, y = 3.05, col = "#7f878f", size = 4) +
# annotate("text", label = "****", x = 3.5, y = 3.25, col = "#7f878f", size = 4) +
# annotate("text", label = "****", x = 2.5, y = 2.65, col = "#7f878f", size = 4) +
# annotate("text", label = "***", x = 2, y = 2.45, col = "#7f878f", size = 4) +
scale_fill_manual(values = alpha(c("#bbc5d0","#bbc5d0","#bbc5d0","#0092ff"), 0.5)) +
scale_color_manual(values = c("#bbc5d0","#bbc5d0","#bbc5d0","#0092ff")) +
ylab("Amino acid distance") +
xlab("") +
theme_light() +
theme(axis.title.y = element_text(size = 13, vjust = 2.5, color = "#4d4d4d"),
axis.text.x = element_text(size = 13, vjust = -0.5, face = 'bold.italic',
colour = c("#bbc5d0","#bbc5d0","#bbc5d0","#0092ff")),
legend.position = "none")
boxplot
